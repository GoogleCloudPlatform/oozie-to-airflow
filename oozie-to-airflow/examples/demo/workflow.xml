<!--
  Copyright 2019 Google LLC

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->

<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<workflow-app xmlns="uri:oozie:workflow:1.0" name="demo-wf">

    <start to="fork-node"/>

    <fork name="fork-node">
        <path start="pig-node"/>
        <path start="subworkflow-node"/>
        <path start="shell-node"/>
    </fork>

    <action name="pig-node">
        <pig>
            <resource-manager>${resourceManager}</resource-manager>
            <name-node>${nameNode}</name-node>
            <prepare>
                <delete path="${nameNode}/user/${userName}/${examplesRoot}/apps/demo/pig/output-data"/>
                <mkdir path="${nameNode}/user/${userName}/${examplesRoot}/apps/demo/pig/created-folder"/>
            </prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
                <property>
                    <name>mapred.map.output.compress</name>
                    <value>false</value>
                </property>
            </configuration>
            <script>pig/id.pig</script>
            <param>INPUT=/user/${userName}/${examplesRoot}/apps/demo/pig/input-data/test-data.txt</param>
            <param>OUTPUT=/user/${userName}/${examplesRoot}/apps/demo/pig/output-data/</param>
        </pig>
        <ok to="join-node"/>
        <error to="fail"/>
    </action>

    <action name="subworkflow-node">
        <sub-workflow>
            <app-path>${nameNode}/user/${userName}/${examplesRoot}/apps/childwf</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>resourceManager</name>
                    <value>${resourceManager}</value>
                </property>
                <property>
                    <name>nameNode</name>
                    <value>${nameNode}</value>
                </property>
                <property>
                    <name>queueName</name>
                    <value>${queueName}</value>
                </property>
                <property>
                    <name>examplesRoot</name>
                    <value>${examplesRoot}</value>
                </property>
                <property>
                    <name>outputDir</name>
                    <value>demosubw</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="join-node"/>
        <error to="fail"/>
    </action>

    <action name="shell-node">
        <shell xmlns="uri:oozie:shell-action:1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="uri:oozie:shell-action:1.0">
            <resource-manager>${resourceManager}</resource-manager>
            <name-node>${nameNode}</name-node>
            <prepare>
                <delete path="${nameNode}/user/${userName}/${examplesRoot}/apps/demo/shell/output-data"/>
                <mkdir path="${nameNode}/user/${userName}/${examplesRoot}/apps/demo/shell/created-folder"/>
            </prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <exec>java</exec>
            <argument>-version</argument>
            <capture-output/>
        </shell>
        <ok to="join-node"/>
        <error to="fail"/>
    </action>

    <join name="join-node" to="decision-node"/>

    <decision name="decision-node">
        <switch>
            <!--
               "True" is generally not the predicate here, but it is
                the only way that it will work with the current version
            -->
            <case to="hdfs-node">True</case>
            <default to="end"/>
        </switch>
    </decision>

    <action name="hdfs-node">
        <fs>
            <delete path="${nameNode}/user/${userName}/${examplesRoot}/apps/demo/shell/created-folder"/>
        </fs>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <kill name="fail">
        <message>Demo workflow failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <end name="end"/>

</workflow-app>
